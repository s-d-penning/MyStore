@model MyStore.web.ViewModels.PieIndexViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found") @Model.Pies.TotalItemCount pies
</p>

<p>
    @Html.ActionLink("Create New", "Create")

    @using (Html.BeginRouteForm("PiesIndex", FormMethod.Get))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All");
        <label>Sort by:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
        <input type="submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }

</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pies.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pies.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pies.First().Price)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Pies)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<div>
    Page @(Model.Pies.PageCount < Model.Pies.PageNumber ? 0 : Model.Pies.PageNumber) of @Model.Pies.PageCount
    @Html.PagedListPager(Model.Pies, page => Url.Action("Index",
        new
            {
                category = @Model.Category,
            Search = @Model.Search,
            sortBy = @Model.SortBy,
            page
        }))
</div>
